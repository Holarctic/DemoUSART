

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Mar  1 14:33:43 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og9 
     1                           	processor	16F1939
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	intentry,global,class=CODE,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    25                           	dabs	1,0x7E,2
    26  0000                     
    27                           ; Version 2.31
    28                           ; Generated 13/10/2020 GMT
    29                           ; 
    30                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution. Publication is not required when
    44                           ;        this file is used in an embedded application.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC16F1939 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62  0000                     	;# 
    63  0001                     	;# 
    64  0002                     	;# 
    65  0003                     	;# 
    66  0004                     	;# 
    67  0005                     	;# 
    68  0006                     	;# 
    69  0007                     	;# 
    70  0008                     	;# 
    71  0009                     	;# 
    72  000A                     	;# 
    73  000B                     	;# 
    74  000C                     	;# 
    75  000D                     	;# 
    76  000E                     	;# 
    77  000F                     	;# 
    78  0010                     	;# 
    79  0011                     	;# 
    80  0012                     	;# 
    81  0013                     	;# 
    82  0015                     	;# 
    83  0016                     	;# 
    84  0016                     	;# 
    85  0017                     	;# 
    86  0018                     	;# 
    87  0019                     	;# 
    88  001A                     	;# 
    89  001B                     	;# 
    90  001C                     	;# 
    91  001E                     	;# 
    92  001F                     	;# 
    93  008C                     	;# 
    94  008D                     	;# 
    95  008E                     	;# 
    96  008F                     	;# 
    97  0090                     	;# 
    98  0091                     	;# 
    99  0092                     	;# 
   100  0093                     	;# 
   101  0095                     	;# 
   102  0096                     	;# 
   103  0097                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009B                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  010C                     	;# 
   113  010D                     	;# 
   114  010E                     	;# 
   115  010F                     	;# 
   116  0110                     	;# 
   117  0111                     	;# 
   118  0112                     	;# 
   119  0113                     	;# 
   120  0114                     	;# 
   121  0115                     	;# 
   122  0116                     	;# 
   123  0117                     	;# 
   124  0118                     	;# 
   125  0119                     	;# 
   126  011A                     	;# 
   127  011B                     	;# 
   128  011D                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  018F                     	;# 
   132  0190                     	;# 
   133  0191                     	;# 
   134  0191                     	;# 
   135  0192                     	;# 
   136  0193                     	;# 
   137  0193                     	;# 
   138  0193                     	;# 
   139  0194                     	;# 
   140  0195                     	;# 
   141  0196                     	;# 
   142  0199                     	;# 
   143  019A                     	;# 
   144  019B                     	;# 
   145  019B                     	;# 
   146  019B                     	;# 
   147  019B                     	;# 
   148  019C                     	;# 
   149  019C                     	;# 
   150  019D                     	;# 
   151  019E                     	;# 
   152  019F                     	;# 
   153  020D                     	;# 
   154  0210                     	;# 
   155  0211                     	;# 
   156  0212                     	;# 
   157  0213                     	;# 
   158  0214                     	;# 
   159  0215                     	;# 
   160  0215                     	;# 
   161  0216                     	;# 
   162  0217                     	;# 
   163  0291                     	;# 
   164  0291                     	;# 
   165  0292                     	;# 
   166  0293                     	;# 
   167  0294                     	;# 
   168  0295                     	;# 
   169  0295                     	;# 
   170  0296                     	;# 
   171  0298                     	;# 
   172  0298                     	;# 
   173  0299                     	;# 
   174  029A                     	;# 
   175  029B                     	;# 
   176  029C                     	;# 
   177  029C                     	;# 
   178  029D                     	;# 
   179  029E                     	;# 
   180  029F                     	;# 
   181  0311                     	;# 
   182  0311                     	;# 
   183  0312                     	;# 
   184  0313                     	;# 
   185  0314                     	;# 
   186  0315                     	;# 
   187  0315                     	;# 
   188  0316                     	;# 
   189  0318                     	;# 
   190  0318                     	;# 
   191  0319                     	;# 
   192  031A                     	;# 
   193  031C                     	;# 
   194  031C                     	;# 
   195  031D                     	;# 
   196  031E                     	;# 
   197  0394                     	;# 
   198  0395                     	;# 
   199  0396                     	;# 
   200  0415                     	;# 
   201  0416                     	;# 
   202  0417                     	;# 
   203  041C                     	;# 
   204  041D                     	;# 
   205  041E                     	;# 
   206  0791                     	;# 
   207  0792                     	;# 
   208  0793                     	;# 
   209  0794                     	;# 
   210  0795                     	;# 
   211  0798                     	;# 
   212  0799                     	;# 
   213  079A                     	;# 
   214  07A0                     	;# 
   215  07A1                     	;# 
   216  07A2                     	;# 
   217  07A3                     	;# 
   218  07A4                     	;# 
   219  07A5                     	;# 
   220  07A6                     	;# 
   221  07A7                     	;# 
   222  07A8                     	;# 
   223  07A9                     	;# 
   224  07AA                     	;# 
   225  07AB                     	;# 
   226  0FE4                     	;# 
   227  0FE5                     	;# 
   228  0FE6                     	;# 
   229  0FE7                     	;# 
   230  0FE8                     	;# 
   231  0FE9                     	;# 
   232  0FEA                     	;# 
   233  0FEB                     	;# 
   234  0FED                     	;# 
   235  0FEE                     	;# 
   236  0FEF                     	;# 
   237  0000                     	;# 
   238  0001                     	;# 
   239  0002                     	;# 
   240  0003                     	;# 
   241  0004                     	;# 
   242  0005                     	;# 
   243  0006                     	;# 
   244  0007                     	;# 
   245  0008                     	;# 
   246  0009                     	;# 
   247  000A                     	;# 
   248  000B                     	;# 
   249  000C                     	;# 
   250  000D                     	;# 
   251  000E                     	;# 
   252  000F                     	;# 
   253  0010                     	;# 
   254  0011                     	;# 
   255  0012                     	;# 
   256  0013                     	;# 
   257  0015                     	;# 
   258  0016                     	;# 
   259  0016                     	;# 
   260  0017                     	;# 
   261  0018                     	;# 
   262  0019                     	;# 
   263  001A                     	;# 
   264  001B                     	;# 
   265  001C                     	;# 
   266  001E                     	;# 
   267  001F                     	;# 
   268  008C                     	;# 
   269  008D                     	;# 
   270  008E                     	;# 
   271  008F                     	;# 
   272  0090                     	;# 
   273  0091                     	;# 
   274  0092                     	;# 
   275  0093                     	;# 
   276  0095                     	;# 
   277  0096                     	;# 
   278  0097                     	;# 
   279  0098                     	;# 
   280  0099                     	;# 
   281  009A                     	;# 
   282  009B                     	;# 
   283  009B                     	;# 
   284  009C                     	;# 
   285  009D                     	;# 
   286  009E                     	;# 
   287  010C                     	;# 
   288  010D                     	;# 
   289  010E                     	;# 
   290  010F                     	;# 
   291  0110                     	;# 
   292  0111                     	;# 
   293  0112                     	;# 
   294  0113                     	;# 
   295  0114                     	;# 
   296  0115                     	;# 
   297  0116                     	;# 
   298  0117                     	;# 
   299  0118                     	;# 
   300  0119                     	;# 
   301  011A                     	;# 
   302  011B                     	;# 
   303  011D                     	;# 
   304  018C                     	;# 
   305  018D                     	;# 
   306  018F                     	;# 
   307  0190                     	;# 
   308  0191                     	;# 
   309  0191                     	;# 
   310  0192                     	;# 
   311  0193                     	;# 
   312  0193                     	;# 
   313  0193                     	;# 
   314  0194                     	;# 
   315  0195                     	;# 
   316  0196                     	;# 
   317  0199                     	;# 
   318  019A                     	;# 
   319  019B                     	;# 
   320  019B                     	;# 
   321  019B                     	;# 
   322  019B                     	;# 
   323  019C                     	;# 
   324  019C                     	;# 
   325  019D                     	;# 
   326  019E                     	;# 
   327  019F                     	;# 
   328  020D                     	;# 
   329  0210                     	;# 
   330  0211                     	;# 
   331  0212                     	;# 
   332  0213                     	;# 
   333  0214                     	;# 
   334  0215                     	;# 
   335  0215                     	;# 
   336  0216                     	;# 
   337  0217                     	;# 
   338  0291                     	;# 
   339  0291                     	;# 
   340  0292                     	;# 
   341  0293                     	;# 
   342  0294                     	;# 
   343  0295                     	;# 
   344  0295                     	;# 
   345  0296                     	;# 
   346  0298                     	;# 
   347  0298                     	;# 
   348  0299                     	;# 
   349  029A                     	;# 
   350  029B                     	;# 
   351  029C                     	;# 
   352  029C                     	;# 
   353  029D                     	;# 
   354  029E                     	;# 
   355  029F                     	;# 
   356  0311                     	;# 
   357  0311                     	;# 
   358  0312                     	;# 
   359  0313                     	;# 
   360  0314                     	;# 
   361  0315                     	;# 
   362  0315                     	;# 
   363  0316                     	;# 
   364  0318                     	;# 
   365  0318                     	;# 
   366  0319                     	;# 
   367  031A                     	;# 
   368  031C                     	;# 
   369  031C                     	;# 
   370  031D                     	;# 
   371  031E                     	;# 
   372  0394                     	;# 
   373  0395                     	;# 
   374  0396                     	;# 
   375  0415                     	;# 
   376  0416                     	;# 
   377  0417                     	;# 
   378  041C                     	;# 
   379  041D                     	;# 
   380  041E                     	;# 
   381  0791                     	;# 
   382  0792                     	;# 
   383  0793                     	;# 
   384  0794                     	;# 
   385  0795                     	;# 
   386  0798                     	;# 
   387  0799                     	;# 
   388  079A                     	;# 
   389  07A0                     	;# 
   390  07A1                     	;# 
   391  07A2                     	;# 
   392  07A3                     	;# 
   393  07A4                     	;# 
   394  07A5                     	;# 
   395  07A6                     	;# 
   396  07A7                     	;# 
   397  07A8                     	;# 
   398  07A9                     	;# 
   399  07AA                     	;# 
   400  07AB                     	;# 
   401  0FE4                     	;# 
   402  0FE5                     	;# 
   403  0FE6                     	;# 
   404  0FE7                     	;# 
   405  0FE8                     	;# 
   406  0FE9                     	;# 
   407  0FEA                     	;# 
   408  0FEB                     	;# 
   409  0FED                     	;# 
   410  0FEE                     	;# 
   411  0FEF                     	;# 
   412                           
   413                           	psect	idataBANK0
   414  02B8                     __pidataBANK0:
   415                           
   416                           ;initializer for _unitAddress
   417  02B8  3403               	retlw	3
   418  000D                     _PORTBbits	set	13
   419  000E                     _PORTCbits	set	14
   420  000B                     _INTCONbits	set	11
   421  000E                     _PORTC	set	14
   422  000D                     _PORTB	set	13
   423  008D                     _RCIF	set	141
   424  008C                     _TXIF	set	140
   425  0091                     _PIE1bits	set	145
   426  008D                     _TRISB	set	141
   427  008E                     _TRISC	set	142
   428  048D                     _RCIE	set	1165
   429  0199                     _RCREG	set	409
   430  019A                     _TXREG	set	410
   431  018D                     _ANSELB	set	397
   432  019B                     _SPBRG	set	411
   433  0CF1                     _TRMT	set	3313
   434  0CF0                     _TX9D	set	3312
   435  0CFE                     _RCIDL	set	3326
   436  0CF5                     _TXEN	set	3317
   437  0CEC                     _CREN	set	3308
   438  0CEB                     _ADDEN	set	3307
   439  0CEE                     _RX9	set	3310
   440  0CF6                     _TX9	set	3318
   441  0CEF                     _SPEN	set	3311
   442  0CF4                     _SYNC	set	3316
   443  0CF2                     _BRGH	set	3314
   444                           
   445                           	psect	cinit
   446  002C                     start_initialization:	
   447                           ; #config settings
   448                           
   449  002C                     __initialization:
   450                           
   451                           ; Initialize objects allocated to BANK0
   452  002C  3182  22B8         	fcall	__pidataBANK0	;fetch initializer
   453  002E  00C1               	movwf	__pdataBANK0& (0+127)
   454                           
   455                           ; Clear objects allocated to BITCOMMON
   456  002F  01FD               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
   457                           
   458                           ; Clear objects allocated to COMMON
   459  0030  01F7               	clrf	__pbssCOMMON& (0+127)
   460  0031  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   461  0032  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   462  0033  01FA               	clrf	(__pbssCOMMON+3)& (0+127)
   463  0034  01FB               	clrf	(__pbssCOMMON+4)& (0+127)
   464  0035  01FC               	clrf	(__pbssCOMMON+5)& (0+127)
   465  0036                     end_of_initialization:	
   466                           ;End of C runtime variable initialization code
   467                           
   468  0036                     __end_of__initialization:
   469  0036  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   470  0037  0020               	movlb	0
   471  0038  3182  2AAD         	ljmp	_main	;jump to C main() function
   472                           
   473                           	psect	bitbssCOMMON
   474  03E8                     __pbitbssCOMMON:
   475  03E8                     _rNine:
   476  03E8                     	ds	1
   477                           
   478                           	psect	bssCOMMON
   479  0077                     __pbssCOMMON:
   480  0077                     _doneTx:
   481  0077                     	ds	2
   482  0079                     _RXmessage:
   483  0079                     	ds	1
   484  007A                     _RXaddress:
   485  007A                     	ds	1
   486  007B                     _TXmessage:
   487  007B                     	ds	1
   488  007C                     _TXaddress:
   489  007C                     	ds	1
   490                           
   491                           	psect	dataBANK0
   492  0041                     __pdataBANK0:
   493  0041                     _unitAddress:
   494  0041                     	ds	1
   495                           
   496                           	psect	cstackCOMMON
   497  0070                     __pcstackCOMMON:
   498  0070                     ?_sendMessages:
   499  0070                     ?_init:	
   500                           ; 1 bytes @ 0x0
   501                           
   502  0070                     ?_main:	
   503                           ; 1 bytes @ 0x0
   504                           
   505  0070                     ?_processMessage:	
   506                           ; 1 bytes @ 0x0
   507                           
   508  0070                     ?_ISR:	
   509                           ; 1 bytes @ 0x0
   510                           
   511  0070                     ?_waitForResponse:	
   512                           ; 1 bytes @ 0x0
   513                           
   514  0070                     ?i1_UART_Send:	
   515                           ; 1 bytes @ 0x0
   516                           
   517  0070                     ?i1_waitForResponse:	
   518                           ; 1 bytes @ 0x0
   519                           
   520  0070                     ??i1_waitForResponse:	
   521                           ; 1 bytes @ 0x0
   522                           
   523  0070                     ?i1_sendMessages:	
   524                           ; 1 bytes @ 0x0
   525                           
   526  0070                     ?_myAddress:	
   527                           ; 1 bytes @ 0x0
   528                           
   529  0070                     i1UART_Send@msg:	
   530                           ; 2 bytes @ 0x0
   531                           
   532                           
   533                           ; 1 bytes @ 0x0
   534  0070                     	ds	1
   535  0071                     ??i1_UART_Send:
   536  0071                     i1UART_Send@add:	
   537                           ; 1 bytes @ 0x1
   538                           
   539                           
   540                           ; 1 bytes @ 0x1
   541  0071                     	ds	1
   542  0072                     ??_myAddress:
   543  0072                     ??i1_sendMessages:	
   544                           ; 1 bytes @ 0x2
   545                           
   546                           
   547                           ; 1 bytes @ 0x2
   548  0072                     	ds	2
   549  0074                     ??_processMessage:
   550  0074                     myAddress@add:	
   551                           ; 1 bytes @ 0x4
   552                           
   553                           
   554                           ; 1 bytes @ 0x4
   555  0074                     	ds	1
   556  0075                     processMessage@msg:
   557                           
   558                           ; 1 bytes @ 0x5
   559  0075                     	ds	1
   560  0076                     ??_ISR:
   561                           
   562                           ; 1 bytes @ 0x6
   563  0076                     	ds	1
   564                           
   565                           	psect	cstackBANK0
   566  0020                     __pcstackBANK0:
   567  0020                     ?_UART_Send:
   568  0020                     ??_waitForResponse:	
   569                           ; 1 bytes @ 0x0
   570                           
   571  0020                     ?___aldiv:	
   572                           ; 1 bytes @ 0x0
   573                           
   574  0020                     UART_Send@msg:	
   575                           ; 4 bytes @ 0x0
   576                           
   577  0020                     ___aldiv@divisor:	
   578                           ; 1 bytes @ 0x0
   579                           
   580                           
   581                           ; 4 bytes @ 0x0
   582  0020                     	ds	1
   583  0021                     ??_UART_Send:
   584  0021                     UART_Send@add:	
   585                           ; 1 bytes @ 0x1
   586                           
   587                           
   588                           ; 1 bytes @ 0x1
   589  0021                     	ds	1
   590  0022                     ??_sendMessages:
   591                           
   592                           ; 1 bytes @ 0x2
   593  0022                     	ds	2
   594  0024                     ___aldiv@dividend:
   595                           
   596                           ; 4 bytes @ 0x4
   597  0024                     	ds	4
   598  0028                     ??___aldiv:
   599                           
   600                           ; 1 bytes @ 0x8
   601  0028                     	ds	1
   602  0029                     ___aldiv@counter:
   603                           
   604                           ; 1 bytes @ 0x9
   605  0029                     	ds	1
   606  002A                     ___aldiv@sign:
   607                           
   608                           ; 1 bytes @ 0xA
   609  002A                     	ds	1
   610  002B                     ___aldiv@quotient:
   611                           
   612                           ; 4 bytes @ 0xB
   613  002B                     	ds	4
   614  002F                     ?_UART_Init:
   615  002F                     UART_Init@baudrate:	
   616                           ; 1 bytes @ 0xF
   617                           
   618                           
   619                           ; 4 bytes @ 0xF
   620  002F                     	ds	4
   621  0033                     ??_UART_Init:
   622                           
   623                           ; 1 bytes @ 0x13
   624  0033                     	ds	12
   625  003F                     UART_Init@x:
   626                           
   627                           ; 2 bytes @ 0x1F
   628  003F                     	ds	2
   629  0041                     ??_init:
   630  0041                     ??_main:	
   631                           ; 1 bytes @ 0x21
   632                           
   633                           
   634                           	psect	maintext
   635  02AD                     __pmaintext:	
   636                           ; 1 bytes @ 0x21
   637 ;;
   638 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   639 ;;
   640 ;; *************** function _main *****************
   641 ;; Defined at:
   642 ;;		line 51 in file "main.c"
   643 ;; Parameters:    Size  Location     Type
   644 ;;		None
   645 ;; Auto vars:     Size  Location     Type
   646 ;;		None
   647 ;; Return value:  Size  Location     Type
   648 ;;                  1    wreg      void 
   649 ;; Registers used:
   650 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   651 ;; Tracked objects:
   652 ;;		On entry : B1F/0
   653 ;;		On exit  : 0/0
   654 ;;		Unchanged: 0/0
   655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   659 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   660 ;;Total ram usage:        0 bytes
   661 ;; Hardware stack levels required when called:    7
   662 ;; This function calls:
   663 ;;		_init
   664 ;;		_sendMessages
   665 ;; This function is called by:
   666 ;;		Startup code after reset
   667 ;; This function uses a non-reentrant model
   668 ;;
   669                           
   670                           
   671                           ;psect for function _main
   672  02AD                     _main:
   673                           
   674                           ;main.c: 52: init();
   675                           
   676                           ;incstack = 0
   677                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   678  02AD  3182  2270  3182   	fcall	_init
   679  02B0                     l1102:
   680  02B0  0020               	movlb	0	; select bank0
   681  02B1  0341               	decf	_unitAddress,w
   682  02B2  1D03               	btfss	3,2
   683  02B3  2AB0               	goto	l1102
   684  02B4  3180  20BB  3182   	fcall	_sendMessages
   685  02B7  2AB0               	goto	l1102
   686  02B8                     __end_of_main:
   687                           
   688                           	psect	text1
   689  00BB                     __ptext1:	
   690 ;; *************** function _sendMessages *****************
   691 ;; Defined at:
   692 ;;		line 104 in file "main.c"
   693 ;; Parameters:    Size  Location     Type
   694 ;;		None
   695 ;; Auto vars:     Size  Location     Type
   696 ;;		None
   697 ;; Return value:  Size  Location     Type
   698 ;;                  1    wreg      void 
   699 ;; Registers used:
   700 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   701 ;; Tracked objects:
   702 ;;		On entry : 1F/0
   703 ;;		On exit  : 0/0
   704 ;;		Unchanged: 0/0
   705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   706 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   707 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   708 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
   709 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
   710 ;;Total ram usage:        2 bytes
   711 ;; Hardware stack levels used:    1
   712 ;; Hardware stack levels required when called:    5
   713 ;; This function calls:
   714 ;;		_UART_Send
   715 ;;		_waitForResponse
   716 ;; This function is called by:
   717 ;;		_main
   718 ;; This function uses a non-reentrant model
   719 ;;
   720                           
   721                           
   722                           ;psect for function _sendMessages
   723  00BB                     _sendMessages:
   724                           
   725                           ;main.c: 105: switch(unitAddress) {
   726                           
   727                           ;incstack = 0
   728                           ; Regs used in _sendMessages: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   729  00BB  2914               	goto	l1098
   730  00BC                     l1090:
   731                           
   732                           ;main.c: 107: UART_Send(0x02, (((1 << 2) - 1) & (PORTB >> 0)) + 12);
   733  00BC  080D               	movf	13,w	;volatile
   734  00BD  3903               	andlw	3
   735  00BE  3E0C               	addlw	12
   736  00BF  00A2               	movwf	??_sendMessages
   737  00C0  0822               	movf	??_sendMessages,w
   738  00C1  00A0               	movwf	UART_Send@msg
   739  00C2  3002               	movlw	2
   740  00C3  3182  2256  3180   	fcall	_UART_Send
   741                           
   742                           ;main.c: 108: waitForResponse();
   743  00C6  3182  2218  3180   	fcall	_waitForResponse
   744                           
   745                           ;main.c: 109: waitForResponse();
   746  00C9  3182  2218  3180   	fcall	_waitForResponse
   747                           
   748                           ;main.c: 110: UART_Send(0x03, (((1 << 2) - 1) & (PORTB >> 2)) + 12);
   749  00CC  0020               	movlb	0	; select bank0
   750  00CD  080D               	movf	13,w	;volatile
   751  00CE  00A2               	movwf	??_sendMessages
   752  00CF  3002               	movlw	2
   753  00D0                     u845:
   754  00D0  36A2               	lsrf	??_sendMessages,f
   755  00D1  0B89               	decfsz	9,f
   756  00D2  28D0               	goto	u845
   757  00D3  0822               	movf	??_sendMessages,w
   758  00D4  3903               	andlw	3
   759  00D5  3E0C               	addlw	12
   760  00D6  00A3               	movwf	??_sendMessages+1
   761  00D7  0823               	movf	??_sendMessages+1,w
   762  00D8  00A0               	movwf	UART_Send@msg
   763  00D9  3003               	movlw	3
   764  00DA  3182  2256  3180   	fcall	_UART_Send
   765                           
   766                           ;main.c: 111: waitForResponse();
   767  00DD  3182  2218  3180   	fcall	_waitForResponse
   768                           
   769                           ;main.c: 112: waitForResponse();
   770  00E0  3182  2218         	fcall	_waitForResponse
   771                           
   772                           ;main.c: 113: break;
   773  00E2  0008               	return
   774  00E3                     l1092:
   775                           
   776                           ;main.c: 115: UART_Send(0x01, (((1 << 2) - 1) & (PORTB >> 0)) + 4);
   777  00E3  080D               	movf	13,w	;volatile
   778  00E4  3903               	andlw	3
   779  00E5  3E04               	addlw	4
   780  00E6  00A2               	movwf	??_sendMessages
   781  00E7  0822               	movf	??_sendMessages,w
   782  00E8  00A0               	movwf	UART_Send@msg
   783  00E9  3001               	movlw	1
   784  00EA  3182  2256  3180   	fcall	_UART_Send
   785                           
   786                           ;main.c: 116: UART_Send(0x03, ((1 << 2) - 1) & (PORTB >> 2));
   787  00ED  080D               	movf	13,w	;volatile
   788  00EE  00A2               	movwf	??_sendMessages
   789  00EF  3002               	movlw	2
   790  00F0                     u855:
   791  00F0  36A2               	lsrf	??_sendMessages,f
   792  00F1  0B89               	decfsz	9,f
   793  00F2  28F0               	goto	u855
   794  00F3  0822               	movf	??_sendMessages,w
   795  00F4  3903               	andlw	3
   796  00F5  00A3               	movwf	??_sendMessages+1
   797  00F6  0823               	movf	??_sendMessages+1,w
   798  00F7  00A0               	movwf	UART_Send@msg
   799  00F8  3003               	movlw	3
   800  00F9  3182  2256         	fcall	_UART_Send
   801                           
   802                           ;main.c: 117: break;
   803  00FB  0008               	return
   804  00FC                     l1094:
   805                           
   806                           ;main.c: 119: UART_Send(0x01, ((1 << 2) - 1) & (PORTB >> 0));
   807  00FC  080D               	movf	13,w	;volatile
   808  00FD  3903               	andlw	3
   809  00FE  00A2               	movwf	??_sendMessages
   810  00FF  0822               	movf	??_sendMessages,w
   811  0100  00A0               	movwf	UART_Send@msg
   812  0101  3001               	movlw	1
   813  0102  3182  2256  3180   	fcall	_UART_Send
   814                           
   815                           ;main.c: 120: UART_Send(0x02, ((1 << 2) - 1) & (PORTB >> 2));
   816  0105  080D               	movf	13,w	;volatile
   817  0106  00A2               	movwf	??_sendMessages
   818  0107  3002               	movlw	2
   819  0108                     u865:
   820  0108  36A2               	lsrf	??_sendMessages,f
   821  0109  0B89               	decfsz	9,f
   822  010A  2908               	goto	u865
   823  010B  0822               	movf	??_sendMessages,w
   824  010C  3903               	andlw	3
   825  010D  00A3               	movwf	??_sendMessages+1
   826  010E  0823               	movf	??_sendMessages+1,w
   827  010F  00A0               	movwf	UART_Send@msg
   828  0110  3002               	movlw	2
   829  0111  3182  2256         	fcall	_UART_Send
   830                           
   831                           ;main.c: 121: break;
   832  0113  0008               	return
   833  0114                     l1098:
   834  0114  0841               	movf	_unitAddress,w
   835                           
   836                           ; Switch size 1, requested type "simple"
   837                           ; Number of cases is 3, Range of values is 1 to 3
   838                           ; switch strategies available:
   839                           ; Name         Instructions Cycles
   840                           ; simple_byte           10     6 (average)
   841                           ; direct_byte           15     9 (fixed)
   842                           ; jumptable            263     9 (fixed)
   843                           ;	Chosen strategy is simple_byte
   844  0115  3A01               	xorlw	1	; case 1
   845  0116  1903               	skipnz
   846  0117  28BC               	goto	l1090
   847  0118  3A03               	xorlw	3	; case 2
   848  0119  1903               	skipnz
   849  011A  28E3               	goto	l1092
   850  011B  3A01               	xorlw	1	; case 3
   851  011C  1903               	skipnz
   852  011D  28FC               	goto	l1094
   853  011E  291F               	goto	l133
   854  011F                     l133:
   855  011F  0008               	return
   856  0120                     __end_of_sendMessages:
   857                           
   858                           	psect	text2
   859  0218                     __ptext2:	
   860 ;; *************** function _waitForResponse *****************
   861 ;; Defined at:
   862 ;;		line 96 in file "main.c"
   863 ;; Parameters:    Size  Location     Type
   864 ;;		None
   865 ;; Auto vars:     Size  Location     Type
   866 ;;		None
   867 ;; Return value:  Size  Location     Type
   868 ;;                  1    wreg      void 
   869 ;; Registers used:
   870 ;;		wreg
   871 ;; Tracked objects:
   872 ;;		On entry : 0/0
   873 ;;		On exit  : 0/0
   874 ;;		Unchanged: 0/0
   875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   878 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
   879 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
   880 ;;Total ram usage:        1 bytes
   881 ;; Hardware stack levels used:    1
   882 ;; Hardware stack levels required when called:    4
   883 ;; This function calls:
   884 ;;		Nothing
   885 ;; This function is called by:
   886 ;;		_sendMessages
   887 ;; This function uses a non-reentrant model
   888 ;;
   889                           
   890                           
   891                           ;psect for function _waitForResponse
   892  0218                     _waitForResponse:
   893                           
   894                           ;main.c: 97: _delay((unsigned long)((1)*(8000000/4000.0)));
   895                           
   896                           ;incstack = 0
   897                           ; Regs used in _waitForResponse: [wreg]
   898  0218  3003               	movlw	3
   899  0219  0020               	movlb	0	; select bank0
   900  021A  00A0               	movwf	??_waitForResponse
   901  021B  3097               	movlw	151
   902  021C                     u887:
   903  021C  0B89               	decfsz	9,f
   904  021D  2A1C               	goto	u887
   905  021E  0BA0               	decfsz	??_waitForResponse,f
   906  021F  2A1C               	goto	u887
   907  0220  3200               	nop2
   908  0221                     l119:	
   909                           ;main.c: 98: while(!RCIDL);
   910                           
   911  0221  0023               	movlb	3	; select bank3
   912  0222  1F1F               	btfss	31,6	;volatile
   913  0223  2A21               	goto	l119
   914                           
   915                           ;main.c: 99: _delay((unsigned long)((1)*(8000000/4000.0)));
   916  0224  3003               	movlw	3
   917  0225  0020               	movlb	0	; select bank0
   918  0226  00A0               	movwf	??_waitForResponse
   919  0227  3097               	movlw	151
   920  0228                     u897:
   921  0228  0B89               	decfsz	9,f
   922  0229  2A28               	goto	u897
   923  022A  0BA0               	decfsz	??_waitForResponse,f
   924  022B  2A28               	goto	u897
   925  022C  3200               	nop2
   926  022D                     l122:	
   927                           ;main.c: 100: while(!RCIDL);
   928                           
   929  022D  0023               	movlb	3	; select bank3
   930  022E  1F1F               	btfss	31,6	;volatile
   931  022F  2A2D               	goto	l122
   932                           
   933                           ;main.c: 102: _delay((unsigned long)((1)*(8000000/4000.0)));
   934  0230  3003               	movlw	3
   935  0231  0020               	movlb	0	; select bank0
   936  0232  00A0               	movwf	??_waitForResponse
   937  0233  3097               	movlw	151
   938  0234                     u907:
   939  0234  0B89               	decfsz	9,f
   940  0235  2A34               	goto	u907
   941  0236  0BA0               	decfsz	??_waitForResponse,f
   942  0237  2A34               	goto	u907
   943  0238  3200               	nop2
   944  0239  0008               	return
   945  023A                     __end_of_waitForResponse:
   946                           
   947                           	psect	text3
   948  0256                     __ptext3:	
   949 ;; *************** function _UART_Send *****************
   950 ;; Defined at:
   951 ;;		line 56 in file "main.c"
   952 ;; Parameters:    Size  Location     Type
   953 ;;  add             1    wreg     unsigned char 
   954 ;;  msg             1    0[BANK0 ] unsigned char 
   955 ;; Auto vars:     Size  Location     Type
   956 ;;  add             1    1[BANK0 ] unsigned char 
   957 ;; Return value:  Size  Location     Type
   958 ;;                  1    wreg      void 
   959 ;; Registers used:
   960 ;;		wreg
   961 ;; Tracked objects:
   962 ;;		On entry : 1F/0
   963 ;;		On exit  : 1F/0
   964 ;;		Unchanged: 0/0
   965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
   966 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
   967 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
   968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
   969 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
   970 ;;Total ram usage:        2 bytes
   971 ;; Hardware stack levels used:    1
   972 ;; Hardware stack levels required when called:    4
   973 ;; This function calls:
   974 ;;		Nothing
   975 ;; This function is called by:
   976 ;;		_sendMessages
   977 ;; This function uses a non-reentrant model
   978 ;;
   979                           
   980                           
   981                           ;psect for function _UART_Send
   982  0256                     _UART_Send:
   983                           
   984                           ;incstack = 0
   985                           ; Regs used in _UART_Send: [wreg]
   986                           ;UART_Send@add stored from wreg
   987  0256  00A1               	movwf	UART_Send@add
   988  0257                     l88:	
   989                           ;main.c: 57: while(!RCIDL);
   990                           
   991  0257  0023               	movlb	3	; select bank3
   992  0258  1F1F               	btfss	31,6	;volatile
   993  0259  2A57               	goto	l88
   994                           
   995                           ;main.c: 58: PORTCbits.RC5 = 1;
   996  025A  0020               	movlb	0	; select bank0
   997  025B  168E               	bsf	14,5	;volatile
   998                           
   999                           ;main.c: 59: TX9D = 1;
  1000  025C  0023               	movlb	3	; select bank3
  1001  025D  141E               	bsf	30,0	;volatile
  1002                           
  1003                           ;main.c: 60: TXREG = add;
  1004  025E  0020               	movlb	0	; select bank0
  1005  025F  0821               	movf	UART_Send@add,w
  1006  0260  0023               	movlb	3	; select bank3
  1007  0261  009A               	movwf	26	;volatile
  1008  0262                     l91:	
  1009                           ;main.c: 61: while(!TXIF);
  1010                           
  1011  0262  0020               	movlb	0	; select bank0
  1012  0263  1E11               	btfss	17,4	;volatile
  1013  0264  2A62               	goto	l91
  1014                           
  1015                           ;main.c: 62: TX9D = 0;
  1016  0265  0023               	movlb	3	; select bank3
  1017  0266  101E               	bcf	30,0	;volatile
  1018                           
  1019                           ;main.c: 63: TXREG = msg;
  1020  0267  0020               	movlb	0	; select bank0
  1021  0268  0820               	movf	UART_Send@msg,w
  1022  0269  0023               	movlb	3	; select bank3
  1023  026A  009A               	movwf	26	;volatile
  1024  026B                     l94:	
  1025                           ;main.c: 64: while(!TRMT);
  1026                           
  1027  026B  1C9E               	btfss	30,1	;volatile
  1028  026C  2A6B               	goto	l94
  1029                           
  1030                           ;main.c: 65: PORTCbits.RC5 = 0;
  1031  026D  0020               	movlb	0	; select bank0
  1032  026E  128E               	bcf	14,5	;volatile
  1033  026F  0008               	return
  1034  0270                     __end_of_UART_Send:
  1035                           
  1036                           	psect	text4
  1037  0270                     __ptext4:	
  1038 ;; *************** function _init *****************
  1039 ;; Defined at:
  1040 ;;		line 38 in file "main.c"
  1041 ;; Parameters:    Size  Location     Type
  1042 ;;		None
  1043 ;; Auto vars:     Size  Location     Type
  1044 ;;		None
  1045 ;; Return value:  Size  Location     Type
  1046 ;;                  1    wreg      void 
  1047 ;; Registers used:
  1048 ;;		wreg, status,2, status,0, pclath, cstack
  1049 ;; Tracked objects:
  1050 ;;		On entry : B1F/0
  1051 ;;		On exit  : B1F/1
  1052 ;;		Unchanged: B00/0
  1053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1054 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1055 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1057 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1058 ;;Total ram usage:        0 bytes
  1059 ;; Hardware stack levels used:    1
  1060 ;; Hardware stack levels required when called:    6
  1061 ;; This function calls:
  1062 ;;		_UART_Init
  1063 ;; This function is called by:
  1064 ;;		_main
  1065 ;; This function uses a non-reentrant model
  1066 ;;
  1067                           
  1068                           
  1069                           ;psect for function _init
  1070  0270                     _init:
  1071                           
  1072                           ;main.c: 39: UART_Init(9600);
  1073                           
  1074                           ;incstack = 0
  1075                           ; Regs used in _init: [wreg+status,2+status,0+pclath+cstack]
  1076  0270  3000               	movlw	0
  1077  0271  00B2               	movwf	UART_Init@baudrate+3
  1078  0272  3000               	movlw	0
  1079  0273  00B1               	movwf	UART_Init@baudrate+2
  1080  0274  3025               	movlw	37
  1081  0275  00B0               	movwf	UART_Init@baudrate+1
  1082  0276  3080               	movlw	128
  1083  0277  00AF               	movwf	UART_Init@baudrate
  1084  0278  3181  2185         	fcall	_UART_Init
  1085                           
  1086                           ;main.c: 40: ANSELB = 0x00;
  1087  027A  018D               	clrf	13	;volatile
  1088                           
  1089                           ;main.c: 42: TRISB = 0b00001111;
  1090  027B  300F               	movlw	15
  1091  027C  0021               	movlb	1	; select bank1
  1092  027D  008D               	movwf	13	;volatile
  1093                           
  1094                           ;main.c: 43: PORTB = 0x00;
  1095  027E  0020               	movlb	0	; select bank0
  1096  027F  018D               	clrf	13	;volatile
  1097                           
  1098                           ;main.c: 44: PORTC = 0x00;
  1099  0280  018E               	clrf	14	;volatile
  1100                           
  1101                           ;main.c: 45: INTCONbits.GIE=1;
  1102  0281  178B               	bsf	11,7	;volatile
  1103                           
  1104                           ;main.c: 46: INTCONbits.PEIE=1;
  1105  0282  170B               	bsf	11,6	;volatile
  1106                           
  1107                           ;main.c: 47: PIE1bits.RCIE=1;
  1108  0283  0021               	movlb	1	; select bank1
  1109  0284  1691               	bsf	17,5	;volatile
  1110                           
  1111                           ;main.c: 48: PIE1bits.TXIE=0;
  1112  0285  1211               	bcf	17,4	;volatile
  1113  0286  0008               	return
  1114  0287                     __end_of_init:
  1115                           
  1116                           	psect	text5
  1117  0185                     __ptext5:	
  1118 ;; *************** function _UART_Init *****************
  1119 ;; Defined at:
  1120 ;;		line 18 in file "main.c"
  1121 ;; Parameters:    Size  Location     Type
  1122 ;;  baudrate        4   15[BANK0 ] const long 
  1123 ;; Auto vars:     Size  Location     Type
  1124 ;;  x               2   31[BANK0 ] unsigned int 
  1125 ;; Return value:  Size  Location     Type
  1126 ;;                  1    wreg      unsigned char 
  1127 ;; Registers used:
  1128 ;;		wreg, status,2, status,0, pclath, cstack
  1129 ;; Tracked objects:
  1130 ;;		On entry : B1F/0
  1131 ;;		On exit  : B1F/3
  1132 ;;		Unchanged: B00/0
  1133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1134 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1135 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1136 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1137 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1138 ;;Total ram usage:       18 bytes
  1139 ;; Hardware stack levels used:    1
  1140 ;; Hardware stack levels required when called:    5
  1141 ;; This function calls:
  1142 ;;		___aldiv
  1143 ;; This function is called by:
  1144 ;;		_init
  1145 ;; This function uses a non-reentrant model
  1146 ;;
  1147                           
  1148                           
  1149                           ;psect for function _UART_Init
  1150  0185                     _UART_Init:
  1151                           
  1152                           ;main.c: 19: unsigned int x;;main.c: 20: x = (8000000 - baudrate*16)/(baudrate*16);
  1153                           
  1154                           ;incstack = 0
  1155                           ; Regs used in _UART_Init: [wreg+status,2+status,0+pclath+cstack]
  1156  0185  082F               	movf	UART_Init@baudrate,w
  1157  0186  00B3               	movwf	??_UART_Init
  1158  0187  0830               	movf	UART_Init@baudrate+1,w
  1159  0188  00B4               	movwf	??_UART_Init+1
  1160  0189  0831               	movf	UART_Init@baudrate+2,w
  1161  018A  00B5               	movwf	??_UART_Init+2
  1162  018B  0832               	movf	UART_Init@baudrate+3,w
  1163  018C  00B6               	movwf	??_UART_Init+3
  1164  018D  3004               	movlw	4
  1165  018E                     u565:
  1166  018E  35B3               	lslf	??_UART_Init,f
  1167  018F  0DB4               	rlf	??_UART_Init+1,f
  1168  0190  0DB5               	rlf	??_UART_Init+2,f
  1169  0191  0DB6               	rlf	??_UART_Init+3,f
  1170  0192  0B89               	decfsz	9,f
  1171  0193  298E               	goto	u565
  1172  0194  0836               	movf	??_UART_Init+3,w
  1173  0195  00A3               	movwf	___aldiv@divisor+3
  1174  0196  0835               	movf	??_UART_Init+2,w
  1175  0197  00A2               	movwf	___aldiv@divisor+2
  1176  0198  0834               	movf	??_UART_Init+1,w
  1177  0199  00A1               	movwf	___aldiv@divisor+1
  1178  019A  0833               	movf	??_UART_Init,w
  1179  019B  00A0               	movwf	___aldiv@divisor
  1180  019C  082F               	movf	UART_Init@baudrate,w
  1181  019D  00B7               	movwf	??_UART_Init+4
  1182  019E  0830               	movf	UART_Init@baudrate+1,w
  1183  019F  00B8               	movwf	??_UART_Init+5
  1184  01A0  0831               	movf	UART_Init@baudrate+2,w
  1185  01A1  00B9               	movwf	??_UART_Init+6
  1186  01A2  0832               	movf	UART_Init@baudrate+3,w
  1187  01A3  00BA               	movwf	??_UART_Init+7
  1188  01A4  3004               	movlw	4
  1189  01A5                     u575:
  1190  01A5  35B7               	lslf	??_UART_Init+4,f
  1191  01A6  0DB8               	rlf	??_UART_Init+5,f
  1192  01A7  0DB9               	rlf	??_UART_Init+6,f
  1193  01A8  0DBA               	rlf	??_UART_Init+7,f
  1194  01A9  0B89               	decfsz	9,f
  1195  01AA  29A5               	goto	u575
  1196  01AB  3000               	movlw	0
  1197  01AC  00BB               	movwf	??_UART_Init+8
  1198  01AD  3012               	movlw	18
  1199  01AE  00BC               	movwf	??_UART_Init+9
  1200  01AF  307A               	movlw	122
  1201  01B0  00BD               	movwf	??_UART_Init+10
  1202  01B1  3000               	movlw	0
  1203  01B2  00BE               	movwf	??_UART_Init+11
  1204  01B3  0837               	movf	??_UART_Init+4,w
  1205  01B4  02BB               	subwf	??_UART_Init+8,f
  1206  01B5  0838               	movf	??_UART_Init+5,w
  1207  01B6  3BBC               	subwfb	??_UART_Init+9,f
  1208  01B7  0839               	movf	??_UART_Init+6,w
  1209  01B8  3BBD               	subwfb	??_UART_Init+10,f
  1210  01B9  083A               	movf	??_UART_Init+7,w
  1211  01BA  3BBE               	subwfb	??_UART_Init+11,f
  1212  01BB  083E               	movf	??_UART_Init+11,w
  1213  01BC  00A7               	movwf	___aldiv@dividend+3
  1214  01BD  083D               	movf	??_UART_Init+10,w
  1215  01BE  00A6               	movwf	___aldiv@dividend+2
  1216  01BF  083C               	movf	??_UART_Init+9,w
  1217  01C0  00A5               	movwf	___aldiv@dividend+1
  1218  01C1  083B               	movf	??_UART_Init+8,w
  1219  01C2  00A4               	movwf	___aldiv@dividend
  1220  01C3  3180  203A         	fcall	___aldiv
  1221  01C5  0821               	movf	?___aldiv+1,w
  1222  01C6  00C0               	movwf	UART_Init@x+1
  1223  01C7  0820               	movf	?___aldiv,w
  1224  01C8  00BF               	movwf	UART_Init@x
  1225                           
  1226                           ;main.c: 22: BRGH = 1;
  1227  01C9  0023               	movlb	3	; select bank3
  1228  01CA  151E               	bsf	30,2	;volatile
  1229                           
  1230                           ;main.c: 23: SPBRG = x;
  1231  01CB  0020               	movlb	0	; select bank0
  1232  01CC  083F               	movf	UART_Init@x,w
  1233  01CD  0023               	movlb	3	; select bank3
  1234  01CE  009B               	movwf	27	;volatile
  1235                           
  1236                           ;main.c: 24: SYNC = 0;
  1237  01CF  121E               	bcf	30,4	;volatile
  1238                           
  1239                           ;main.c: 25: SPEN = 1;
  1240  01D0  179D               	bsf	29,7	;volatile
  1241                           
  1242                           ;main.c: 26: TX9 = 1;
  1243  01D1  171E               	bsf	30,6	;volatile
  1244                           
  1245                           ;main.c: 27: RX9 = 1;
  1246  01D2  171D               	bsf	29,6	;volatile
  1247                           
  1248                           ;main.c: 28: ADDEN = 1;
  1249  01D3  159D               	bsf	29,3	;volatile
  1250                           
  1251                           ;main.c: 32: TRISC = 0b10000000;
  1252  01D4  3080               	movlw	128
  1253  01D5  0021               	movlb	1	; select bank1
  1254  01D6  008E               	movwf	14	;volatile
  1255                           
  1256                           ;main.c: 34: CREN = 1;
  1257  01D7  0023               	movlb	3	; select bank3
  1258  01D8  161D               	bsf	29,4	;volatile
  1259                           
  1260                           ;main.c: 35: TXEN = 1;
  1261  01D9  169E               	bsf	30,5	;volatile
  1262  01DA  0008               	return
  1263  01DB                     __end_of_UART_Init:
  1264                           
  1265                           	psect	text6
  1266  003A                     __ptext6:	
  1267 ;; *************** function ___aldiv *****************
  1268 ;; Defined at:
  1269 ;;		line 5 in file "/opt/microchip/xc8/v2.31/pic/sources/c90/common/aldiv.c"
  1270 ;; Parameters:    Size  Location     Type
  1271 ;;  divisor         4    0[BANK0 ] long 
  1272 ;;  dividend        4    4[BANK0 ] long 
  1273 ;; Auto vars:     Size  Location     Type
  1274 ;;  quotient        4   11[BANK0 ] long 
  1275 ;;  sign            1   10[BANK0 ] unsigned char 
  1276 ;;  counter         1    9[BANK0 ] unsigned char 
  1277 ;; Return value:  Size  Location     Type
  1278 ;;                  4    0[BANK0 ] long 
  1279 ;; Registers used:
  1280 ;;		wreg, status,2, status,0
  1281 ;; Tracked objects:
  1282 ;;		On entry : B1F/0
  1283 ;;		On exit  : B1F/0
  1284 ;;		Unchanged: B00/0
  1285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1286 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1287 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1288 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1289 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1290 ;;Total ram usage:       15 bytes
  1291 ;; Hardware stack levels used:    1
  1292 ;; Hardware stack levels required when called:    4
  1293 ;; This function calls:
  1294 ;;		Nothing
  1295 ;; This function is called by:
  1296 ;;		_UART_Init
  1297 ;; This function uses a non-reentrant model
  1298 ;;
  1299                           
  1300                           
  1301                           ;psect for function ___aldiv
  1302  003A                     ___aldiv:
  1303                           
  1304                           ;incstack = 0
  1305                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  1306  003A  01AA               	clrf	___aldiv@sign
  1307  003B  1FA3               	btfss	___aldiv@divisor+3,7
  1308  003C  284A               	goto	l354
  1309  003D  09A0               	comf	___aldiv@divisor,f
  1310  003E  09A1               	comf	___aldiv@divisor+1,f
  1311  003F  09A2               	comf	___aldiv@divisor+2,f
  1312  0040  09A3               	comf	___aldiv@divisor+3,f
  1313  0041  0AA0               	incf	___aldiv@divisor,f
  1314  0042  1903               	skipnz
  1315  0043  0AA1               	incf	___aldiv@divisor+1,f
  1316  0044  1903               	skipnz
  1317  0045  0AA2               	incf	___aldiv@divisor+2,f
  1318  0046  1903               	skipnz
  1319  0047  0AA3               	incf	___aldiv@divisor+3,f
  1320  0048  01AA               	clrf	___aldiv@sign
  1321  0049  0AAA               	incf	___aldiv@sign,f
  1322  004A                     l354:
  1323  004A  1FA7               	btfss	___aldiv@dividend+3,7
  1324  004B  285B               	goto	l908
  1325  004C  09A4               	comf	___aldiv@dividend,f
  1326  004D  09A5               	comf	___aldiv@dividend+1,f
  1327  004E  09A6               	comf	___aldiv@dividend+2,f
  1328  004F  09A7               	comf	___aldiv@dividend+3,f
  1329  0050  0AA4               	incf	___aldiv@dividend,f
  1330  0051  1903               	skipnz
  1331  0052  0AA5               	incf	___aldiv@dividend+1,f
  1332  0053  1903               	skipnz
  1333  0054  0AA6               	incf	___aldiv@dividend+2,f
  1334  0055  1903               	skipnz
  1335  0056  0AA7               	incf	___aldiv@dividend+3,f
  1336  0057  3001               	movlw	1
  1337  0058  00A8               	movwf	??___aldiv
  1338  0059  0828               	movf	??___aldiv,w
  1339  005A  06AA               	xorwf	___aldiv@sign,f
  1340  005B                     l908:
  1341  005B  3000               	movlw	0
  1342  005C  00AE               	movwf	___aldiv@quotient+3
  1343  005D  3000               	movlw	0
  1344  005E  00AD               	movwf	___aldiv@quotient+2
  1345  005F  3000               	movlw	0
  1346  0060  00AC               	movwf	___aldiv@quotient+1
  1347  0061  3000               	movlw	0
  1348  0062  00AB               	movwf	___aldiv@quotient
  1349  0063  0823               	movf	___aldiv@divisor+3,w
  1350  0064  0422               	iorwf	___aldiv@divisor+2,w
  1351  0065  0421               	iorwf	___aldiv@divisor+1,w
  1352  0066  0420               	iorwf	___aldiv@divisor,w
  1353  0067  1903               	skipnz
  1354  0068  28A4               	goto	l930
  1355  0069  01A9               	clrf	___aldiv@counter
  1356  006A  0AA9               	incf	___aldiv@counter,f
  1357  006B                     l916:
  1358  006B  1BA3               	btfsc	___aldiv@divisor+3,7
  1359  006C  2879               	goto	l918
  1360  006D  3001               	movlw	1
  1361  006E                     u445:
  1362  006E  35A0               	lslf	___aldiv@divisor,f
  1363  006F  0DA1               	rlf	___aldiv@divisor+1,f
  1364  0070  0DA2               	rlf	___aldiv@divisor+2,f
  1365  0071  0DA3               	rlf	___aldiv@divisor+3,f
  1366  0072  0B89               	decfsz	9,f
  1367  0073  286E               	goto	u445
  1368  0074  3001               	movlw	1
  1369  0075  00A8               	movwf	??___aldiv
  1370  0076  0828               	movf	??___aldiv,w
  1371  0077  07A9               	addwf	___aldiv@counter,f
  1372  0078  286B               	goto	l916
  1373  0079                     l918:
  1374  0079  3001               	movlw	1
  1375  007A                     u465:
  1376  007A  35AB               	lslf	___aldiv@quotient,f
  1377  007B  0DAC               	rlf	___aldiv@quotient+1,f
  1378  007C  0DAD               	rlf	___aldiv@quotient+2,f
  1379  007D  0DAE               	rlf	___aldiv@quotient+3,f
  1380  007E  0B89               	decfsz	9,f
  1381  007F  287A               	goto	u465
  1382  0080  0823               	movf	___aldiv@divisor+3,w
  1383  0081  0227               	subwf	___aldiv@dividend+3,w
  1384  0082  1D03               	skipz
  1385  0083  288E               	goto	u475
  1386  0084  0822               	movf	___aldiv@divisor+2,w
  1387  0085  0226               	subwf	___aldiv@dividend+2,w
  1388  0086  1D03               	skipz
  1389  0087  288E               	goto	u475
  1390  0088  0821               	movf	___aldiv@divisor+1,w
  1391  0089  0225               	subwf	___aldiv@dividend+1,w
  1392  008A  1D03               	skipz
  1393  008B  288E               	goto	u475
  1394  008C  0820               	movf	___aldiv@divisor,w
  1395  008D  0224               	subwf	___aldiv@dividend,w
  1396  008E                     u475:
  1397  008E  1C03               	skipc
  1398  008F  2899               	goto	l926
  1399  0090  0820               	movf	___aldiv@divisor,w
  1400  0091  02A4               	subwf	___aldiv@dividend,f
  1401  0092  0821               	movf	___aldiv@divisor+1,w
  1402  0093  3BA5               	subwfb	___aldiv@dividend+1,f
  1403  0094  0822               	movf	___aldiv@divisor+2,w
  1404  0095  3BA6               	subwfb	___aldiv@dividend+2,f
  1405  0096  0823               	movf	___aldiv@divisor+3,w
  1406  0097  3BA7               	subwfb	___aldiv@dividend+3,f
  1407  0098  142B               	bsf	___aldiv@quotient,0
  1408  0099                     l926:
  1409  0099  3001               	movlw	1
  1410  009A                     u485:
  1411  009A  36A3               	lsrf	___aldiv@divisor+3,f
  1412  009B  0CA2               	rrf	___aldiv@divisor+2,f
  1413  009C  0CA1               	rrf	___aldiv@divisor+1,f
  1414  009D  0CA0               	rrf	___aldiv@divisor,f
  1415  009E  0B89               	decfsz	9,f
  1416  009F  289A               	goto	u485
  1417  00A0  3001               	movlw	1
  1418  00A1  02A9               	subwf	___aldiv@counter,f
  1419  00A2  1D03               	btfss	3,2
  1420  00A3  2879               	goto	l918
  1421  00A4                     l930:
  1422  00A4  082A               	movf	___aldiv@sign,w
  1423  00A5  1903               	btfsc	3,2
  1424  00A6  28B2               	goto	l934
  1425  00A7  09AB               	comf	___aldiv@quotient,f
  1426  00A8  09AC               	comf	___aldiv@quotient+1,f
  1427  00A9  09AD               	comf	___aldiv@quotient+2,f
  1428  00AA  09AE               	comf	___aldiv@quotient+3,f
  1429  00AB  0AAB               	incf	___aldiv@quotient,f
  1430  00AC  1903               	skipnz
  1431  00AD  0AAC               	incf	___aldiv@quotient+1,f
  1432  00AE  1903               	skipnz
  1433  00AF  0AAD               	incf	___aldiv@quotient+2,f
  1434  00B0  1903               	skipnz
  1435  00B1  0AAE               	incf	___aldiv@quotient+3,f
  1436  00B2                     l934:
  1437  00B2  082E               	movf	___aldiv@quotient+3,w
  1438  00B3  00A3               	movwf	?___aldiv+3
  1439  00B4  082D               	movf	___aldiv@quotient+2,w
  1440  00B5  00A2               	movwf	?___aldiv+2
  1441  00B6  082C               	movf	___aldiv@quotient+1,w
  1442  00B7  00A1               	movwf	?___aldiv+1
  1443  00B8  082B               	movf	___aldiv@quotient,w
  1444  00B9  00A0               	movwf	?___aldiv
  1445  00BA  0008               	return
  1446  00BB                     __end_of___aldiv:
  1447                           
  1448                           	psect	intentry
  1449  0004                     __pintentry:	
  1450 ;; *************** function _ISR *****************
  1451 ;; Defined at:
  1452 ;;		line 83 in file "main.c"
  1453 ;; Parameters:    Size  Location     Type
  1454 ;;		None
  1455 ;; Auto vars:     Size  Location     Type
  1456 ;;		None
  1457 ;; Return value:  Size  Location     Type
  1458 ;;                  1    wreg      void 
  1459 ;; Registers used:
  1460 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1461 ;; Tracked objects:
  1462 ;;		On entry : 0/0
  1463 ;;		On exit  : 0/0
  1464 ;;		Unchanged: 0/0
  1465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1466 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1467 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1468 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1469 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1470 ;;Total ram usage:        1 bytes
  1471 ;; Hardware stack levels used:    1
  1472 ;; Hardware stack levels required when called:    3
  1473 ;; This function calls:
  1474 ;;		_myAddress
  1475 ;;		_processMessage
  1476 ;; This function is called by:
  1477 ;;		Interrupt level 1
  1478 ;; This function uses a non-reentrant model
  1479 ;;
  1480                           
  1481  0004                     _ISR:
  1482                           
  1483                           ;incstack = 0
  1484  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  1485                           
  1486                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1487  0005  3180               	pagesel	$
  1488                           
  1489                           ;main.c: 85: if (RCIE && RCIF) {
  1490  0006  0021               	movlb	1	; select bank1
  1491  0007  1E91               	btfss	17,5	;volatile
  1492  0008  2828               	goto	i1l116
  1493  0009  0020               	movlb	0	; select bank0
  1494  000A  1E91               	btfss	17,5	;volatile
  1495  000B  2828               	goto	i1l116
  1496                           
  1497                           ;main.c: 86: if (ADDEN) {
  1498  000C  0023               	movlb	3	; select bank3
  1499  000D  1D9D               	btfss	29,3	;volatile
  1500  000E  281E               	goto	i1l112
  1501                           
  1502                           ;main.c: 87: RXaddress = RCREG;
  1503  000F  0819               	movf	25,w	;volatile
  1504  0010  00F6               	movwf	??_ISR
  1505  0011  0876               	movf	??_ISR,w
  1506  0012  00FA               	movwf	_RXaddress
  1507                           
  1508                           ;main.c: 88: if (myAddress(RXaddress)) ADDEN = 0;
  1509  0013  087A               	movf	_RXaddress,w
  1510  0014  3182  229D  3180   	fcall	_myAddress
  1511  0017  0870               	movf	?_myAddress,w
  1512  0018  0471               	iorwf	?_myAddress+1,w
  1513  0019  1903               	btfsc	3,2
  1514  001A  2828               	goto	i1l116
  1515  001B  0023               	movlb	3	; select bank3
  1516  001C  119D               	bcf	29,3	;volatile
  1517  001D  2828               	goto	i1l116
  1518  001E                     i1l112:
  1519  001E  199D               	btfsc	29,3	;volatile
  1520  001F  2828               	goto	i1l116
  1521                           
  1522                           ;main.c: 90: RXmessage = RCREG;
  1523  0020  0819               	movf	25,w	;volatile
  1524  0021  00F6               	movwf	??_ISR
  1525  0022  0876               	movf	??_ISR,w
  1526  0023  00F9               	movwf	_RXmessage
  1527                           
  1528                           ;main.c: 91: ADDEN = 1;
  1529  0024  159D               	bsf	29,3	;volatile
  1530                           
  1531                           ;main.c: 92: processMessage(RXmessage);
  1532  0025  0879               	movf	_RXmessage,w
  1533  0026  3181  21DB         	fcall	_processMessage
  1534  0028                     i1l116:
  1535  0028  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  1536  0029  0009               	retfie
  1537  002A                     __end_of_ISR:
  1538                           
  1539                           	psect	text8
  1540  01DB                     __ptext8:	
  1541 ;; *************** function _processMessage *****************
  1542 ;; Defined at:
  1543 ;;		line 72 in file "main.c"
  1544 ;; Parameters:    Size  Location     Type
  1545 ;;  msg             1    wreg     unsigned char 
  1546 ;; Auto vars:     Size  Location     Type
  1547 ;;  msg             1    5[COMMON] unsigned char 
  1548 ;; Return value:  Size  Location     Type
  1549 ;;                  1    wreg      void 
  1550 ;; Registers used:
  1551 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1552 ;; Tracked objects:
  1553 ;;		On entry : 1F/3
  1554 ;;		On exit  : 0/0
  1555 ;;		Unchanged: 0/0
  1556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1558 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1559 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1560 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1561 ;;Total ram usage:        2 bytes
  1562 ;; Hardware stack levels used:    1
  1563 ;; Hardware stack levels required when called:    2
  1564 ;; This function calls:
  1565 ;;		i1_sendMessages
  1566 ;; This function is called by:
  1567 ;;		_ISR
  1568 ;; This function uses a non-reentrant model
  1569 ;;
  1570                           
  1571                           
  1572                           ;psect for function _processMessage
  1573  01DB                     _processMessage:
  1574                           
  1575                           ;incstack = 0
  1576                           ; Regs used in _processMessage: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1577                           ;processMessage@msg stored from wreg
  1578  01DB  00F5               	movwf	processMessage@msg
  1579                           
  1580                           ;main.c: 73: if ((msg>>2)%2) {
  1581  01DC  0875               	movf	processMessage@msg,w
  1582  01DD  00F4               	movwf	??_processMessage
  1583  01DE  3002               	movlw	2
  1584  01DF                     u71_25:
  1585  01DF  36F4               	lsrf	??_processMessage,f
  1586  01E0  0B89               	decfsz	9,f
  1587  01E1  29DF               	goto	u71_25
  1588  01E2  1C74               	btfss	??_processMessage,0
  1589  01E3  29F9               	goto	i1l1036
  1590                           
  1591                           ;main.c: 74: PORTBbits.RB7 = (msg>>1) % 2;
  1592  01E4  3675               	lsrf	processMessage@msg,w
  1593  01E5  3901               	andlw	1
  1594  01E6  00F4               	movwf	??_processMessage
  1595  01E7  0CF4               	rrf	??_processMessage,f
  1596  01E8  0CF4               	rrf	??_processMessage,f
  1597  01E9  0020               	movlb	0	; select bank0
  1598  01EA  080D               	movf	13,w	;volatile
  1599  01EB  0674               	xorwf	??_processMessage,w
  1600  01EC  397F               	andlw	-129
  1601  01ED  0674               	xorwf	??_processMessage,w
  1602  01EE  008D               	movwf	13	;volatile
  1603                           
  1604                           ;main.c: 75: PORTBbits.RB6 = msg % 2;
  1605  01EF  0875               	movf	processMessage@msg,w
  1606  01F0  3901               	andlw	1
  1607  01F1  00F4               	movwf	??_processMessage
  1608  01F2  0EF4               	swapf	??_processMessage,f
  1609  01F3  0DF4               	rlf	??_processMessage,f
  1610  01F4  0DF4               	rlf	??_processMessage,f
  1611  01F5  080D               	movf	13,w	;volatile
  1612  01F6  0674               	xorwf	??_processMessage,w
  1613  01F7  39BF               	andlw	-65
  1614  01F8  2A0B               	goto	L1
  1615  01F9                     i1l1036:	
  1616                           ;main.c: 76: } else {
  1617                           
  1618                           
  1619                           ;main.c: 77: PORTBbits.RB5 = (msg>>1) % 2;
  1620  01F9  3675               	lsrf	processMessage@msg,w
  1621  01FA  3901               	andlw	1
  1622  01FB  00F4               	movwf	??_processMessage
  1623  01FC  0EF4               	swapf	??_processMessage,f
  1624  01FD  0DF4               	rlf	??_processMessage,f
  1625  01FE  0020               	movlb	0	; select bank0
  1626  01FF  080D               	movf	13,w	;volatile
  1627  0200  0674               	xorwf	??_processMessage,w
  1628  0201  39DF               	andlw	-33
  1629  0202  0674               	xorwf	??_processMessage,w
  1630  0203  008D               	movwf	13	;volatile
  1631                           
  1632                           ;main.c: 78: PORTBbits.RB4 = msg % 2;
  1633  0204  0875               	movf	processMessage@msg,w
  1634  0205  3901               	andlw	1
  1635  0206  00F4               	movwf	??_processMessage
  1636  0207  0EF4               	swapf	??_processMessage,f
  1637  0208  080D               	movf	13,w	;volatile
  1638  0209  0674               	xorwf	??_processMessage,w
  1639  020A  39EF               	andlw	-17
  1640  020B                     L1:
  1641  020B  0674               	xorwf	??_processMessage,w
  1642  020C  008D               	movwf	13	;volatile
  1643                           
  1644                           ;main.c: 79: };main.c: 80: if ((msg>>3)%2) sendMessages();
  1645  020D  0875               	movf	processMessage@msg,w
  1646  020E  00F4               	movwf	??_processMessage
  1647  020F  3003               	movlw	3
  1648  0210                     u73_25:
  1649  0210  36F4               	lsrf	??_processMessage,f
  1650  0211  0B89               	decfsz	9,f
  1651  0212  2A10               	goto	u73_25
  1652  0213  1C74               	btfss	??_processMessage,0
  1653  0214  0008               	return
  1654  0215  3181  2120         	fcall	i1_sendMessages
  1655  0217  0008               	return
  1656  0218                     __end_of_processMessage:
  1657                           
  1658                           	psect	text9
  1659  0120                     __ptext9:	
  1660 ;; *************** function i1_sendMessages *****************
  1661 ;; Defined at:
  1662 ;;		line 104 in file "main.c"
  1663 ;; Parameters:    Size  Location     Type
  1664 ;;		None
  1665 ;; Auto vars:     Size  Location     Type
  1666 ;;		None
  1667 ;; Return value:  Size  Location     Type
  1668 ;;                  1    wreg      void 
  1669 ;; Registers used:
  1670 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1671 ;; Tracked objects:
  1672 ;;		On entry : 1F/0
  1673 ;;		On exit  : 0/0
  1674 ;;		Unchanged: 0/0
  1675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1676 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1678 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1679 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1680 ;;Total ram usage:        2 bytes
  1681 ;; Hardware stack levels used:    1
  1682 ;; Hardware stack levels required when called:    1
  1683 ;; This function calls:
  1684 ;;		i1_UART_Send
  1685 ;;		i1_waitForResponse
  1686 ;; This function is called by:
  1687 ;;		_processMessage
  1688 ;; This function uses a non-reentrant model
  1689 ;;
  1690                           
  1691                           
  1692                           ;psect for function i1_sendMessages
  1693  0120                     i1_sendMessages:
  1694                           
  1695                           ;main.c: 105: switch(unitAddress) {
  1696                           
  1697                           ;incstack = 0
  1698                           ; Regs used in i1_sendMessages: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1699  0120  2979               	goto	i1l996
  1700  0121                     i1l988:
  1701                           
  1702                           ;main.c: 107: UART_Send(0x02, (((1 << 2) - 1) & (PORTB >> 0)) + 12);
  1703  0121  080D               	movf	13,w	;volatile
  1704  0122  3903               	andlw	3
  1705  0123  3E0C               	addlw	12
  1706  0124  00F2               	movwf	??i1_sendMessages
  1707  0125  0872               	movf	??i1_sendMessages,w
  1708  0126  00F0               	movwf	i1UART_Send@msg
  1709  0127  3002               	movlw	2
  1710  0128  3182  2287  3181   	fcall	i1_UART_Send
  1711                           
  1712                           ;main.c: 108: waitForResponse();
  1713  012B  3182  223A  3181   	fcall	i1_waitForResponse
  1714                           
  1715                           ;main.c: 109: waitForResponse();
  1716  012E  3182  223A  3181   	fcall	i1_waitForResponse
  1717                           
  1718                           ;main.c: 110: UART_Send(0x03, (((1 << 2) - 1) & (PORTB >> 2)) + 12);
  1719  0131  0020               	movlb	0	; select bank0
  1720  0132  080D               	movf	13,w	;volatile
  1721  0133  00F2               	movwf	??i1_sendMessages
  1722  0134  3002               	movlw	2
  1723  0135                     u63_25:
  1724  0135  36F2               	lsrf	??i1_sendMessages,f
  1725  0136  0B89               	decfsz	9,f
  1726  0137  2935               	goto	u63_25
  1727  0138  0872               	movf	??i1_sendMessages,w
  1728  0139  3903               	andlw	3
  1729  013A  3E0C               	addlw	12
  1730  013B  00F3               	movwf	??i1_sendMessages+1
  1731  013C  0873               	movf	??i1_sendMessages+1,w
  1732  013D  00F0               	movwf	i1UART_Send@msg
  1733  013E  3003               	movlw	3
  1734  013F  3182  2287  3181   	fcall	i1_UART_Send
  1735                           
  1736                           ;main.c: 111: waitForResponse();
  1737  0142  3182  223A  3181   	fcall	i1_waitForResponse
  1738                           
  1739                           ;main.c: 112: waitForResponse();
  1740  0145  3182  223A         	fcall	i1_waitForResponse
  1741                           
  1742                           ;main.c: 113: break;
  1743  0147  0008               	return
  1744  0148                     i1l990:
  1745                           
  1746                           ;main.c: 115: UART_Send(0x01, (((1 << 2) - 1) & (PORTB >> 0)) + 4);
  1747  0148  080D               	movf	13,w	;volatile
  1748  0149  3903               	andlw	3
  1749  014A  3E04               	addlw	4
  1750  014B  00F2               	movwf	??i1_sendMessages
  1751  014C  0872               	movf	??i1_sendMessages,w
  1752  014D  00F0               	movwf	i1UART_Send@msg
  1753  014E  3001               	movlw	1
  1754  014F  3182  2287  3181   	fcall	i1_UART_Send
  1755                           
  1756                           ;main.c: 116: UART_Send(0x03, ((1 << 2) - 1) & (PORTB >> 2));
  1757  0152  080D               	movf	13,w	;volatile
  1758  0153  00F2               	movwf	??i1_sendMessages
  1759  0154  3002               	movlw	2
  1760  0155                     u64_25:
  1761  0155  36F2               	lsrf	??i1_sendMessages,f
  1762  0156  0B89               	decfsz	9,f
  1763  0157  2955               	goto	u64_25
  1764  0158  0872               	movf	??i1_sendMessages,w
  1765  0159  3903               	andlw	3
  1766  015A  00F3               	movwf	??i1_sendMessages+1
  1767  015B  0873               	movf	??i1_sendMessages+1,w
  1768  015C  00F0               	movwf	i1UART_Send@msg
  1769  015D  3003               	movlw	3
  1770  015E  3182  2287         	fcall	i1_UART_Send
  1771                           
  1772                           ;main.c: 117: break;
  1773  0160  0008               	return
  1774  0161                     i1l992:
  1775                           
  1776                           ;main.c: 119: UART_Send(0x01, ((1 << 2) - 1) & (PORTB >> 0));
  1777  0161  080D               	movf	13,w	;volatile
  1778  0162  3903               	andlw	3
  1779  0163  00F2               	movwf	??i1_sendMessages
  1780  0164  0872               	movf	??i1_sendMessages,w
  1781  0165  00F0               	movwf	i1UART_Send@msg
  1782  0166  3001               	movlw	1
  1783  0167  3182  2287  3181   	fcall	i1_UART_Send
  1784                           
  1785                           ;main.c: 120: UART_Send(0x02, ((1 << 2) - 1) & (PORTB >> 2));
  1786  016A  080D               	movf	13,w	;volatile
  1787  016B  00F2               	movwf	??i1_sendMessages
  1788  016C  3002               	movlw	2
  1789  016D                     u65_25:
  1790  016D  36F2               	lsrf	??i1_sendMessages,f
  1791  016E  0B89               	decfsz	9,f
  1792  016F  296D               	goto	u65_25
  1793  0170  0872               	movf	??i1_sendMessages,w
  1794  0171  3903               	andlw	3
  1795  0172  00F3               	movwf	??i1_sendMessages+1
  1796  0173  0873               	movf	??i1_sendMessages+1,w
  1797  0174  00F0               	movwf	i1UART_Send@msg
  1798  0175  3002               	movlw	2
  1799  0176  3182  2287         	fcall	i1_UART_Send
  1800                           
  1801                           ;main.c: 121: break;
  1802  0178  0008               	return
  1803  0179                     i1l996:
  1804  0179  0841               	movf	_unitAddress,w
  1805                           
  1806                           ; Switch size 1, requested type "simple"
  1807                           ; Number of cases is 3, Range of values is 1 to 3
  1808                           ; switch strategies available:
  1809                           ; Name         Instructions Cycles
  1810                           ; simple_byte           10     6 (average)
  1811                           ; direct_byte           15     9 (fixed)
  1812                           ; jumptable            263     9 (fixed)
  1813                           ;	Chosen strategy is simple_byte
  1814  017A  3A01               	xorlw	1	; case 1
  1815  017B  1903               	skipnz
  1816  017C  2921               	goto	i1l988
  1817  017D  3A03               	xorlw	3	; case 2
  1818  017E  1903               	skipnz
  1819  017F  2948               	goto	i1l990
  1820  0180  3A01               	xorlw	1	; case 3
  1821  0181  1903               	skipnz
  1822  0182  2961               	goto	i1l992
  1823  0183  2984               	goto	i1l133
  1824  0184                     i1l133:
  1825  0184  0008               	return
  1826  0185                     __end_ofi1_sendMessages:
  1827                           
  1828                           	psect	text10
  1829  023A                     __ptext10:	
  1830 ;; *************** function i1_waitForResponse *****************
  1831 ;; Defined at:
  1832 ;;		line 96 in file "main.c"
  1833 ;; Parameters:    Size  Location     Type
  1834 ;;		None
  1835 ;; Auto vars:     Size  Location     Type
  1836 ;;		None
  1837 ;; Return value:  Size  Location     Type
  1838 ;;                  1    wreg      void 
  1839 ;; Registers used:
  1840 ;;		wreg
  1841 ;; Tracked objects:
  1842 ;;		On entry : 0/0
  1843 ;;		On exit  : 0/0
  1844 ;;		Unchanged: 0/0
  1845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1848 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1849 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1850 ;;Total ram usage:        1 bytes
  1851 ;; Hardware stack levels used:    1
  1852 ;; This function calls:
  1853 ;;		Nothing
  1854 ;; This function is called by:
  1855 ;;		i1_sendMessages
  1856 ;; This function uses a non-reentrant model
  1857 ;;
  1858                           
  1859                           
  1860                           ;psect for function i1_waitForResponse
  1861  023A                     i1_waitForResponse:
  1862                           
  1863                           ;main.c: 97: _delay((unsigned long)((1)*(8000000/4000.0)));
  1864                           
  1865                           ;incstack = 0
  1866                           ; Regs used in i1_waitForResponse: [wreg]
  1867  023A  3003               	movlw	3
  1868  023B  00F0               	movwf	??i1_waitForResponse
  1869  023C  3098               	movlw	152
  1870  023D                     u91_27:
  1871  023D  0B89               	decfsz	9,f
  1872  023E  2A3D               	goto	u91_27
  1873  023F  0BF0               	decfsz	??i1_waitForResponse,f
  1874  0240  2A3D               	goto	u91_27
  1875  0241                     i1l119:	
  1876                           ;main.c: 98: while(!RCIDL);
  1877                           
  1878  0241  0023               	movlb	3	; select bank3
  1879  0242  1F1F               	btfss	31,6	;volatile
  1880  0243  2A41               	goto	i1l119
  1881                           
  1882                           ;main.c: 99: _delay((unsigned long)((1)*(8000000/4000.0)));
  1883  0244  3003               	movlw	3
  1884  0245  00F0               	movwf	??i1_waitForResponse
  1885  0246  3098               	movlw	152
  1886  0247                     u92_27:
  1887  0247  0B89               	decfsz	9,f
  1888  0248  2A47               	goto	u92_27
  1889  0249  0BF0               	decfsz	??i1_waitForResponse,f
  1890  024A  2A47               	goto	u92_27
  1891  024B                     i1l122:	
  1892                           ;main.c: 100: while(!RCIDL);
  1893                           
  1894  024B  0023               	movlb	3	; select bank3
  1895  024C  1F1F               	btfss	31,6	;volatile
  1896  024D  2A4B               	goto	i1l122
  1897                           
  1898                           ;main.c: 102: _delay((unsigned long)((1)*(8000000/4000.0)));
  1899  024E  3003               	movlw	3
  1900  024F  00F0               	movwf	??i1_waitForResponse
  1901  0250  3098               	movlw	152
  1902  0251                     u93_27:
  1903  0251  0B89               	decfsz	9,f
  1904  0252  2A51               	goto	u93_27
  1905  0253  0BF0               	decfsz	??i1_waitForResponse,f
  1906  0254  2A51               	goto	u93_27
  1907  0255  0008               	return
  1908  0256                     __end_ofi1_waitForResponse:
  1909                           
  1910                           	psect	text11
  1911  0287                     __ptext11:	
  1912 ;; *************** function i1_UART_Send *****************
  1913 ;; Defined at:
  1914 ;;		line 56 in file "main.c"
  1915 ;; Parameters:    Size  Location     Type
  1916 ;;  add             1    wreg     unsigned char 
  1917 ;;  msg             1    0[COMMON] unsigned char 
  1918 ;; Auto vars:     Size  Location     Type
  1919 ;;  add             1    1[COMMON] unsigned char 
  1920 ;; Return value:  Size  Location     Type
  1921 ;;                  1    wreg      void 
  1922 ;; Registers used:
  1923 ;;		wreg
  1924 ;; Tracked objects:
  1925 ;;		On entry : 1F/0
  1926 ;;		On exit  : 1F/0
  1927 ;;		Unchanged: 0/0
  1928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1929 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1930 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1932 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1933 ;;Total ram usage:        2 bytes
  1934 ;; Hardware stack levels used:    1
  1935 ;; This function calls:
  1936 ;;		Nothing
  1937 ;; This function is called by:
  1938 ;;		i1_sendMessages
  1939 ;; This function uses a non-reentrant model
  1940 ;;
  1941                           
  1942                           
  1943                           ;psect for function i1_UART_Send
  1944  0287                     i1_UART_Send:
  1945                           
  1946                           ;incstack = 0
  1947                           ; Regs used in i1_UART_Send: [wreg]
  1948                           ;i1UART_Send@add stored from wreg
  1949  0287  00F1               	movwf	i1UART_Send@add
  1950  0288                     i1l88:	
  1951                           ;main.c: 57: while(!RCIDL);
  1952                           
  1953  0288  0023               	movlb	3	; select bank3
  1954  0289  1F1F               	btfss	31,6	;volatile
  1955  028A  2A88               	goto	i1l88
  1956                           
  1957                           ;main.c: 58: PORTCbits.RC5 = 1;
  1958  028B  0020               	movlb	0	; select bank0
  1959  028C  168E               	bsf	14,5	;volatile
  1960                           
  1961                           ;main.c: 59: TX9D = 1;
  1962  028D  0023               	movlb	3	; select bank3
  1963  028E  141E               	bsf	30,0	;volatile
  1964                           
  1965                           ;main.c: 60: TXREG = add;
  1966  028F  0871               	movf	i1UART_Send@add,w
  1967  0290  009A               	movwf	26	;volatile
  1968  0291                     i1l91:	
  1969                           ;main.c: 61: while(!TXIF);
  1970                           
  1971  0291  0020               	movlb	0	; select bank0
  1972  0292  1E11               	btfss	17,4	;volatile
  1973  0293  2A91               	goto	i1l91
  1974                           
  1975                           ;main.c: 62: TX9D = 0;
  1976  0294  0023               	movlb	3	; select bank3
  1977  0295  101E               	bcf	30,0	;volatile
  1978                           
  1979                           ;main.c: 63: TXREG = msg;
  1980  0296  0870               	movf	i1UART_Send@msg,w
  1981  0297  009A               	movwf	26	;volatile
  1982  0298                     i1l94:	
  1983                           ;main.c: 64: while(!TRMT);
  1984                           
  1985  0298  1C9E               	btfss	30,1	;volatile
  1986  0299  2A98               	goto	i1l94
  1987                           
  1988                           ;main.c: 65: PORTCbits.RC5 = 0;
  1989  029A  0020               	movlb	0	; select bank0
  1990  029B  128E               	bcf	14,5	;volatile
  1991  029C  0008               	return
  1992  029D                     __end_ofi1_UART_Send:
  1993                           
  1994                           	psect	text12
  1995  029D                     __ptext12:	
  1996 ;; *************** function _myAddress *****************
  1997 ;; Defined at:
  1998 ;;		line 68 in file "main.c"
  1999 ;; Parameters:    Size  Location     Type
  2000 ;;  add             1    wreg     unsigned char 
  2001 ;; Auto vars:     Size  Location     Type
  2002 ;;  add             1    4[COMMON] unsigned char 
  2003 ;; Return value:  Size  Location     Type
  2004 ;;                  2    0[COMMON] int 
  2005 ;; Registers used:
  2006 ;;		wreg
  2007 ;; Tracked objects:
  2008 ;;		On entry : 1F/3
  2009 ;;		On exit  : 1F/0
  2010 ;;		Unchanged: 0/0
  2011 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2012 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2013 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2014 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2015 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2016 ;;Total ram usage:        5 bytes
  2017 ;; Hardware stack levels used:    1
  2018 ;; This function calls:
  2019 ;;		Nothing
  2020 ;; This function is called by:
  2021 ;;		_ISR
  2022 ;; This function uses a non-reentrant model
  2023 ;;
  2024                           
  2025                           
  2026                           ;psect for function _myAddress
  2027  029D                     _myAddress:
  2028                           
  2029                           ;incstack = 0
  2030                           ; Regs used in _myAddress: [wreg]
  2031                           ;myAddress@add stored from wreg
  2032  029D  00F4               	movwf	myAddress@add
  2033                           
  2034                           ;main.c: 69: return add==unitAddress;
  2035  029E  0874               	movf	myAddress@add,w
  2036  029F  0020               	movlb	0	; select bank0
  2037  02A0  0641               	xorwf	_unitAddress,w
  2038  02A1  1D03               	btfss	3,2
  2039  02A2  2AA5               	goto	u69_20
  2040  02A3  3001               	movlw	1
  2041  02A4  2AA6               	goto	u70_20
  2042  02A5                     u69_20:
  2043  02A5  3000               	movlw	0
  2044  02A6                     u70_20:
  2045  02A6  00F2               	movwf	??_myAddress
  2046  02A7  01F3               	clrf	??_myAddress+1
  2047  02A8  0872               	movf	??_myAddress,w
  2048  02A9  00F0               	movwf	?_myAddress
  2049  02AA  0873               	movf	??_myAddress+1,w
  2050  02AB  00F1               	movwf	?_myAddress+1
  2051  02AC  0008               	return
  2052  02AD                     __end_of_myAddress:
  2053  007E                     btemp	set	126	;btemp
  2054  007E                     int$flags	set	126
  2055  007E                     wtemp0	set	126
  2056                           
  2057                           	psect	config
  2058                           
  2059                           ;Config register CONFIG1 @ 0x8007
  2060                           ;	Oscillator Selection
  2061                           ;	FOSC = HS, HS Oscillator, High-speed crystal/resonator connected between OSC1 and OSC2
      +                           pins
  2062                           ;	Watchdog Timer Enable
  2063                           ;	WDTE = OFF, WDT disabled
  2064                           ;	Power-up Timer Enable
  2065                           ;	PWRTE = OFF, PWRT disabled
  2066                           ;	MCLR Pin Function Select
  2067                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  2068                           ;	Flash Program Memory Code Protection
  2069                           ;	CP = OFF, Program memory code protection is disabled
  2070                           ;	Data Memory Code Protection
  2071                           ;	CPD = OFF, Data memory code protection is disabled
  2072                           ;	Brown-out Reset Enable
  2073                           ;	BOREN = OFF, Brown-out Reset disabled
  2074                           ;	Clock Out Enable
  2075                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  2076                           ;	Internal/External Switchover
  2077                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2078                           ;	Fail-Safe Clock Monitor Enable
  2079                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2080  8007                     	org	32775
  2081  8007  09E2               	dw	2530
  2082                           
  2083                           ;Config register CONFIG2 @ 0x8008
  2084                           ;	Flash Memory Self-Write Protection
  2085                           ;	WRT = OFF, Write protection off
  2086                           ;	Voltage Regulator Capacitor Enable
  2087                           ;	VCAPEN = OFF, All VCAP pin functionality is disabled
  2088                           ;	PLL Enable
  2089                           ;	PLLEN = OFF, 4x PLL disabled
  2090                           ;	Stack Overflow/Underflow Reset Enable
  2091                           ;	STVREN = OFF, Stack Overflow or Underflow will not cause a Reset
  2092                           ;	Brown-out Reset Voltage Selection
  2093                           ;	BORV = 0x1, unprogrammed default
  2094                           ;	Low-Voltage Programming Enable
  2095                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  2096  8008                     	org	32776
  2097  8008  1CFF               	dw	7423

Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         6
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      14
    BANK0            80     33      34
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_processMessage
    _processMessage->i1_sendMessages
    i1_sendMessages->i1_UART_Send

Critical Paths under _main in BANK0

    _sendMessages->_UART_Send
    _init->_UART_Init
    _UART_Init->___aldiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1083
                               _init
                       _sendMessages
 ---------------------------------------------------------------------------------
 (1) _sendMessages                                         2     2      0     524
                                              2 BANK0      2     2      0
                          _UART_Send
                    _waitForResponse
 ---------------------------------------------------------------------------------
 (2) _waitForResponse                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _UART_Send                                            2     1      1     524
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0     559
                          _UART_Init
 ---------------------------------------------------------------------------------
 (2) _UART_Init                                           18    14      4     559
                                             15 BANK0     18    14      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             15     7      8     428
                                              0 BANK0     15     7      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  1     1      0     354
                                              6 COMMON     1     1      0
                          _myAddress
                     _processMessage
 ---------------------------------------------------------------------------------
 (5) _processMessage                                       2     2      0     332
                                              4 COMMON     2     2      0
                     i1_sendMessages
 ---------------------------------------------------------------------------------
 (6) i1_sendMessages                                       2     2      0     200
                                              2 COMMON     2     2      0
                        i1_UART_Send
                  i1_waitForResponse
 ---------------------------------------------------------------------------------
 (7) i1_waitForResponse                                    1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) i1_UART_Send                                          2     1      1     200
                                              0 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (5) _myAddress                                            5     3      2      22
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init
     _UART_Init
       ___aldiv
   _sendMessages
     _UART_Send
     _waitForResponse

 _ISR (ROOT)
   _myAddress
   _processMessage
     i1_sendMessages
       i1_UART_Send
       i1_waitForResponse

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       1       1        7.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      7       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     21      22       5       42.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      30      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      30      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Mar  1 14:33:43 2021

                        l91 0262                          l94 026B                          l88 0257  
                       l122 022D                         l133 011F                         l119 0221  
                       l354 004A                         l930 00A4                         l916 006B  
                       l908 005B                         l934 00B2                         l926 0099  
                       l918 0079                         _ISR 0004                         u445 006E  
                       u465 007A                         u475 008E                         u485 009A  
                       u565 018E                         u575 01A5                         u907 0234  
                       u845 00D0                         u855 00F0                         u865 0108  
                       _RX9 0CEE                         u887 021C                         u897 0228  
                       _TX9 0CF6                         wreg 0009                        ?_ISR 0070  
                      l1102 02B0                        l1090 00BC                        l1092 00E3  
                      l1094 00FC                        l1098 0114                        _BRGH 0CF2  
                      _CREN 0CEC                        _RCIE 048D                        _RCIF 008D  
                      i1l91 0291                        i1l94 0298                        i1l88 0288  
                      _SPEN 0CEF                        _TX9D 0CF0                        _TRMT 0CF1  
                      _TXEN 0CF5                        _TXIF 008C                        _SYNC 0CF4  
                      _main 02AD                        _init 0270                        btemp 007E  
                      start 002A                       ??_ISR 0076             __end_of___aldiv 00BB  
                     _ADDEN 0CEB                       ?_main 0070                       ?_init 0070  
                     i1l112 001E                       i1l122 024B                       i1l116 0028  
                     i1l133 0184                       i1l119 0241                       _RCIDL 0CFE  
                     i1l990 0148                       i1l992 0161                       i1l988 0121  
                     i1l996 0179                       _RCREG 0199                       _SPBRG 019B  
                     _PORTB 000D                       _PORTC 000E                       u70_20 02A6  
                     u63_25 0135                       u71_25 01DF                       u64_25 0155  
                     _TRISB 008D                       u65_25 016D                       u73_25 0210  
                     _TRISC 008E                       u91_27 023D                       u92_27 0247  
                     u69_20 02A5                       u93_27 0251                       _TXREG 019A  
        __size_of_UART_Init 0056          __size_of_UART_Send 001A                       _rNine 03E8  
            __pbitbssCOMMON 03E8                       status 0003                       wtemp0 007E  
          ?_waitForResponse 0070                ?i1_UART_Send 0070             __initialization 002C  
              __end_of_main 02B8                __end_of_init 0287                      ??_main 0041  
                    ??_init 0041                      _ANSELB 018D                      i1l1036 01F9  
         __end_of_UART_Init 01DB           __end_of_UART_Send 0270                   ??___aldiv 0028  
          ??_processMessage 0074                      _doneTx 0077            ??i1_sendMessages 0072  
   __end_of__initialization 0036              __pcstackCOMMON 0070                __pidataBANK0 02B8  
              myAddress@add 0074               ?_sendMessages 0070          __size_of_myAddress 0010  
                __pmaintext 02AD        __size_ofi1_UART_Send 0016                  __pintentry 0004  
            ??_sendMessages 0022                     ___aldiv 003A                     __ptext1 00BB  
                   __ptext2 0218                     __ptext3 0256                     __ptext4 0270  
                   __ptext5 0185                     __ptext6 003A                     __ptext8 01DB  
         __end_of_myAddress 02AD                     __ptext9 0120                __size_of_ISR 0026  
          ___aldiv@dividend 0024        end_of_initialization 0036           i1_waitForResponse 023A  
        ?i1_waitForResponse 0070            ___aldiv@quotient 002B    __size_of_waitForResponse 0022  
                 _UART_Init 0185                   _UART_Send 0256         ??i1_waitForResponse 0070  
                 _PORTBbits 000D                   _PORTCbits 000E   __end_ofi1_waitForResponse 0256  
      __end_of_sendMessages 0120                  ?_UART_Init 002F                   _RXaddress 007A  
                ?_UART_Send 0020                   _TXaddress 007C         start_initialization 002C  
                 _RXmessage 0079                 __end_of_ISR 002A           processMessage@msg 0075  
                 _TXmessage 007B                 __pdataBANK0 0041           ??_waitForResponse 0020  
               __pbssCOMMON 0077                   ___latbits 0003     __size_of_processMessage 003D  
             __pcstackBANK0 0020  __size_ofi1_waitForResponse 001C     __size_ofi1_sendMessages 0065  
             ??i1_UART_Send 0071                    ?___aldiv 0020                 ??_UART_Init 0033  
               ??_UART_Send 0021                   _myAddress 029D                  UART_Init@x 003F  
           ___aldiv@divisor 0020             ___aldiv@counter 0029                    _PIE1bits 0091  
     __size_of_sendMessages 0065           UART_Init@baudrate 002F         __end_ofi1_UART_Send 029D  
                ?_myAddress 0070                _sendMessages 00BB            __size_of___aldiv 0081  
            _processMessage 01DB                    __ptext10 023A                    __ptext11 0287  
                  __ptext12 029D                UART_Send@add 0021                UART_Send@msg 0020  
            i1_sendMessages 0120               __size_of_main 000B               __size_of_init 0017  
               i1_UART_Send 0287             _waitForResponse 0218                    int$flags 007E  
    __end_of_processMessage 0218                  _INTCONbits 000B                 ??_myAddress 0072  
    __end_ofi1_sendMessages 0185                    intlevel1 0000              i1UART_Send@add 0071  
            i1UART_Send@msg 0070             ?_processMessage 0070                ___aldiv@sign 002A  
           ?i1_sendMessages 0070     __end_of_waitForResponse 023A                 _unitAddress 0041  
